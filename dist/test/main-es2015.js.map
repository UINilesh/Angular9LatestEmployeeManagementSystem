{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/emp.service.ts","./src/app/employee.ts","./src/app/ems/add/add.component.ts","./src/app/ems/add/add.component.html","./src/app/ems/edit/edit.component.ts","./src/app/ems/edit/edit.component.html","./src/app/ems/home/home.component.ts","./src/app/ems/home/home.component.html","./src/app/ems/navbar/navbar.component.ts","./src/app/ems/navbar/navbar.component.html","./src/app/ems/profileuser/profileuser.component.ts","./src/app/ems/profileuser/profileuser.component.html","./src/app/ems/show/show.component.ts","./src/app/ems/show/show.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/guard/authguard.guard.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/loginservice/auth.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/searchdata/filter-parent.pipe.ts","./src/app/searchdata/filter.pipe.ts","./src/app/searchdata/highlightText.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// shared component data here\nimport { HomeComponent } from './ems/home/home.component';\nimport { AddComponent } from './ems/add/add.component';\nimport { EditComponent } from './ems/edit/edit.component';\nimport { ShowComponent } from './ems/show/show.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n// authguard\nimport { AuthguardGuard } from './guard/authguard.guard';\nimport { ProfileuserComponent } from './ems/profileuser/profileuser.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full',\n    data: { title: 'Welcome to Employee Management System' },\n  },\n  { path: 'login', component: LoginComponent, data: { title: 'Login' } },\n  {\n    path: 'home',\n    component: HomeComponent,\n    canActivate: [AuthguardGuard],\n    data: { title: 'Welcome to Employee Management System' },\n  },\n  {\n    path: 'add',\n    component: AddComponent,\n    canActivate: [AuthguardGuard],\n    data: { title: 'Add Employee' },\n  },\n  {\n    path: 'edit/:id',\n    component: EditComponent,\n    canActivate: [AuthguardGuard],\n    data: { title: 'Update Employee' },\n  },\n  {\n    path: 'show/:id',\n    component: ShowComponent,\n    canActivate: [AuthguardGuard],\n    data: { title: 'Details Employee' },\n  },\n  { \n    path: 'profile',\n    component:ProfileuserComponent,\n    canActivate: [AuthguardGuard],\n    data: {title: 'Manage user profile'},\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    data: { title: 'Register' },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'test';\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title\n  ) {}\n\n  ngOnInit() {\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        var rt = this.getChild(this.activatedRoute);\n\n        rt.data.subscribe((data) => {\n          console.log(data);\n          this.titleService.setTitle(data.title);\n        });\n      });\n  }\n\n  getChild(activatedRoute: ActivatedRoute) {\n    if (activatedRoute.firstChild) {\n      return this.getChild(activatedRoute.firstChild);\n    } else {\n      return activatedRoute;\n    }\n  }\n}\n","\n     <router-outlet></router-outlet>\n  \n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NavbarComponent } from './ems/navbar/navbar.component';\nimport { AddComponent } from './ems/add/add.component';\nimport { EditComponent } from './ems/edit/edit.component';\nimport { HomeComponent } from './ems/home/home.component';\nimport { ShowComponent } from './ems/show/show.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { ApiService } from './loginservice/auth.service';\nimport { EmpService } from './emp.service';\n// authguard \nimport { AuthguardGuard } from './guard/authguard.guard';\n\n// search data filter \nimport { FilterPipe } from './searchdata/filter.pipe';\n\nimport { FilterParentPipe } from './searchdata/filter-parent.pipe';\n// after search hightlight text using custom pipe \nimport { HighlightPipe } from './searchdata/highlightText';\n\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { ProfileuserComponent } from './ems/profileuser/profileuser.component';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    NavbarComponent,\n    AddComponent,\n    EditComponent,\n    HomeComponent,\n    ShowComponent,\n    LoginComponent,\n    RegisterComponent,\n    FilterPipe,\n    FilterParentPipe,\n    HighlightPipe,\n    ProfileuserComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxPaginationModule\n  ],\n  providers: [ApiService,EmpService,AuthguardGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n@Injectable()\nexport class EmpService {\n  employees = [];\n  constructor(private _http: HttpClient) {}\n  checkMe: any;\n\n  getEmployees() {\n    //return this._http.get(\"http://employeeerp.fusionbox.co.in/api/select.php/\")\n    return this._http\n      .get('http://employeeerp.fusionbox.co.in/api/select.php/')\n\n      .map((res) => {\n        this.checkMe = res;\n\n        if (this.checkMe._body !== '0') {\n          //  return res.json()\n          return res;\n        }\n      });\n  }\n\n  addEmployee(info) {\n    return this._http\n      .post('http://employeeerp.fusionbox.co.in/api/insert.php/', info)\n      .map(() => '');\n  }\n\n  getEmployee(id) {\n    return this._http\n      .post('http://employeeerp.fusionbox.co.in/api/selectone.php/', { id: id })\n      .map((res) => res);\n  }\n\n  deleteEmployee(id) {\n    return this._http\n      .post('http://employeeerp.fusionbox.co.in/api/delete.php/', { id: id })\n      .map(() => this.getEmployees());\n  }\n\n  updateEmployee(info) {\n    return this._http\n      .post('http://employeeerp.fusionbox.co.in/api/update.php/', info)\n      .map(() => '');\n  }\n\n  // download employee data \n  downloadFile(data, filename='data') {\n    let csvData = this.ConvertToCSV(data, ['name','position', 'dateofjoining', 'department', 'salary']);\n    console.log(csvData)\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\n    let dwldLink = document.createElement(\"a\");\n    let url = URL.createObjectURL(blob);\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\n        dwldLink.setAttribute(\"target\", \"_blank\");\n    }\n    dwldLink.setAttribute(\"href\", url);\n    dwldLink.setAttribute(\"download\", filename + \".csv\");\n    dwldLink.style.visibility = \"hidden\";\n    document.body.appendChild(dwldLink);\n    dwldLink.click();\n    document.body.removeChild(dwldLink);\n}\n\nConvertToCSV(objArray, headerList) {\n     let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n     let str = '';\n     let row = 'S.No,';\n\n     for (let index in headerList) {\n         row += headerList[index] + ',';\n     }\n     row = row.slice(0, -1);\n     str += row + '\\r\\n';\n     for (let i = 0; i < array.length; i++) {\n         let line = (i+1)+'';\n         for (let index in headerList) {\n            let head = headerList[index];\n\n             line += ',' + array[i][head];\n         }\n         str += line + '\\r\\n';\n     }\n     return str;\n }\n\n}\n","export class Employee {\n    _id:number;\n    name: string;\n    position: string;\n    dateofjoining:string;\n    department: string;\n    salary: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EmpService } from '../../emp.service';\nimport { Employee } from '../../employee';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css'],\n})\nexport class AddComponent implements OnInit {\n  addformData: FormGroup;\n  submitted = false;\n\n  constructor(\n    private empService: EmpService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.addformData = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(5)]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.addformData.controls;\n  }\n\n  model = new Employee();\n  addEmployee() {\n   \n    this.empService.addEmployee(this.model).subscribe(() => this.goBack());\n  }\n  goBack() {\n    this.router.navigate(['/home']);\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"dashboard\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-body\">\n            <form class=\"form-horizontal\"  autocomplete=\"false\" (submit)=\"addEmployee()\">\n              <div class=\"formGroup\">\n                <label for=\"name\" class=\"col-sm-2 control-label\"\n                  >Employee Name :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"name\"\n                    [(ngModel)]=\"model.name\"\n                     \n                  />\n                   \n                </div>\n\n              </div>\n              <div class=\"form-group\">\n                <label for=\"position\" class=\"col-sm-2 control-label\"\n                  >Job Position :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"model.position\"\n                    name=\"position\"\n                  />\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"department\" class=\"col-sm-2 control-label\"\n                  >Department Name :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"model.department\"\n                    name=\"department\"\n                  />\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"department\" class=\"col-sm-2 control-label\"\n                  >Date of Joining :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"date\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"model.dateofjoining\"\n                    name=\"dateofjoining\"\n                    required\n                  />\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"salary\" class=\"col-sm-2 control-label\"\n                  >Employee's Salary :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"model.salary\"\n                    name=\"salary\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div class=\"form-group editbtn\">\n                <div class=\"col-sm-offset-2 col-sm-8\">\n                  <button type=\"submit\" class=\"btn btn-success\">Save</button>\n                  <a class=\"btn btn-info text-light\" (click)=\"goBack()\"\n                    >Cancel</a\n                  >\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<br />\n<br />\n<br />\n\n<footer></footer>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport { EmpService } from '../../emp.service';\nimport { Employee } from '../../employee';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(private router: Router, private route: ActivatedRoute, private empService: EmpService) { }\n\n  ngOnInit(): void {\n    this.getSingleEmployee();\n  }\n\n   //model:any={};\n   model = new Employee();\n   id = this.route.snapshot.params['id'];\n   getSingleEmployee(){\n     \n     this.empService\n       .getEmployee(this.id)\n       .subscribe(employee =>{\n           this.model = employee[0];\n           })\n   };\n   \n   updateEmployee(){\n       this.empService\n         .updateEmployee(this.model)\n         .subscribe(()=> this.goBack());\n   }\n  \n    goBack(){\n     this.router.navigate(['/home']);\n   }\n   \n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n \n  <div class=\"panelShowSection\">\n<div class=\"panel panel-default\">\n   <div class=\"panel-body\">\n    <form class=\"form-horizontal\" (submit)=\"updateEmployee()\">\n  <div class=\"form-group\">\n     \n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"model.name\" name=\"name\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"position\" class=\"col-sm-2 control-label\">Job Position : </label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"model.position\" name=\"position\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"department\" class=\"col-sm-2 control-label\">Department Name : </label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"model.department\" name=\"department\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"dateofjoining\" class=\"col-sm-2 control-label\">Date of Joining : </label>\n    <div class=\"col-sm-9\">\n      <input type=\"date\" class=\"form-control\"  [(ngModel)]=\"model.dateofjoining\" name=\"dateofjoining\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"salary\" class=\"col-sm-2 control-label\">Employee's Salary : </label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"model.salary\" name=\"salary\">\n    </div>\n  </div>\n  \n\n  <div class=\"form-group editbtn\">\n    <div class=\"col-sm-12\">\n      \n      <button type=\"submit\" class=\"btn btn-success\">Update</button>\n      <a  class=\"btn btn-info text-light\" (click)=\"goBack()\">Cancel</a>\n    </div>\n   \n  </div>\n</form>\n\n  </div>\n</div>\n</div>\n</div>\n\n</div>\n</div>\n\n<footer></footer>\n  ","import { Component, OnInit } from '@angular/core';\nimport { EmpService } from '../../emp.service';\nimport { Employee } from '../../employee';\nimport { ApiService } from '../../loginservice/auth.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  // define select variable\n  // checkall checkbox\n  isEmployee: boolean = false;\n  checkAllEmployees: boolean = false;\n\n  selectEmployeName = null;\n  showlist = null;\n  searchString: any;\n  employees: any;\n\n  // pagination code here\n  p: number = 1;\n  collection: any[];\n\n  constructor(\n    private _empService: EmpService,\n    private router: Router,\n    private dataService: ApiService\n  ) {}\n\n  ngOnInit(): void {\n    this.getEmployees();\n    this.selectEmployeName;\n  }\n\n  getEmployees() {\n    this._empService.getEmployees().subscribe((employees) => {\n      this.employees = employees;\n    });\n  }\n\n  deleteEmployee(id) {\n    if (confirm('Are you sure to delete')) {\n      console.log('Implement delete functionality here');\n      this._empService.deleteEmployee(id).subscribe(() => {\n        this.getEmployees();\n      });\n    }\n  }\n\n  download() {\n    this._empService.downloadFile(this.employees, 'jsontocsv');\n  }\n\n  changeEmployeeData(event) {\n    if (event.target.name == 'checkEmployee') {\n      this.isEmployee = true;\n    }\n\n    if (this.isEmployee && this.checkAllEmployees) {\n      event.target.checked = true;\n    }\n  }\n\n  allcheckbox(event) {\n    const checked = event.target.checked;\n    this.employees.forEach((item) => (item.selected = checked));\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"dashboard\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <select\n          name=\"filterName\"\n          class=\"form-control\"\n          [(ngModel)]=\"selectEmployeName\"\n        >\n          <option [ngValue]=\"null\">Please Select Name</option>\n          <option *ngFor=\"let employee of employees\">\n            {{ employee.name }}\n          </option>\n        </select>\n      </div>\n      <div class=\"col-md-4 ml-auto\">\n        <div class=\"searchBox\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"searchString\"\n            placeholder=\"Search Name Here...\"\n            [(ngModel)]=\"searchString\"\n          />\n          <p>You Typed - {{ searchString }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <br />\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <select [(ngModel)]=\"showlist\">\n          <option [ngValue]=\"null\">Select List</option>\n          <option>5</option>\n          <option>10</option>\n          <option>15</option>\n        </select>\n        {{ showlist }}\n      </div>\n\n      <div class=\"col-md-2\">\n        <div class=\"\">\n          <button class=\"btn btn-info text-light\" (click)=\"download()\">\n            Export Data\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"detailsSection\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <td class=\"bg-dark text-light\">\n              <input\n                type=\"checkbox\"\n                name=\"allcheckbox[]\"\n                [value]=\"employees\"\n                (change)=\"allcheckbox($event)\"\n              />\n            </td>\n\n            <td class=\"bg-dark text-light\"><strong>No.</strong></td>\n            <td class=\"bg-dark text-light\"><strong>Name</strong></td>\n            <td class=\"bg-dark text-light\"><strong>Position</strong></td>\n            <td class=\"bg-dark text-light\"><strong>Date of Joining</strong></td>\n            <td class=\"bg-dark text-light\"><strong>Department</strong></td>\n            <td class=\"bg-dark actionField text-light\">\n              <strong>Action</strong>\n            </td>\n          </tr>\n        </thead>\n        <tbody *ngIf=\"employees | filter: 'name':searchString as result\">\n          <tr\n            *ngFor=\"\n              let employee of employees\n                | filter: 'name':selectEmployeName\n                | paginate\n                  : { id: 'paginationalbum', itemsPerPage: 4, currentPage: p }\n                | filter: 'name':searchString;\n              let i = index\n            \"\n          >\n            <td>\n              <input\n                type=\"checkbox\"\n                name=\"checkEmployee\"\n                [checked]=\"employee.selected\"\n                (change)=\"changeEmployeeData($event)\"\n              />\n            </td>\n            <td>{{ i + 1 }}</td>\n\n            <td>\n              <span\n                [innerHTML]=\"\n                  employee.name\n                    | highlight: searchString\n                    | highlight: selectEmployeName\n                \"\n              ></span>\n            </td>\n            <td>{{ employee.position }}</td>\n            <td>{{ employee.dateofjoining }}</td>\n            <td>{{ employee.department }}</td>\n            <td width=\"275\">\n              <a class=\"btn btn-info\" routerLink=\"/show/{{ employee._id }}\"\n                >Detail</a\n              >\n              <a class=\"btn btn-success\" routerLink=\"/edit/{{ employee._id }}\"\n                >Edit</a\n              >\n              <a\n                class=\"btn btn-danger text-light\"\n                (click)=\"deleteEmployee(employee._id)\"\n                >Delete</a\n              >\n            </td>\n          </tr>\n          <tr *ngIf=\"result.length === 0\">\n            <td style=\"border: 0;\" colspan=\"10\">\n              <table style=\"width: 100%; text-align: center; border: 0;\">\n                <tr>\n                  <td style=\"border: 0;\">\n                    <p style=\"color: red;\">Data Not Found</p>\n                  </td>\n                </tr>\n              </table>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <table width=\"100%\" class=\"\" style=\"text-align: center;\">\n      <tr>\n        <td>\n          <pagination-controls id=\"paginationalbum\" (pageChange)=\"p = $event\">\n          </pagination-controls>\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n<br />\n<br />\n<br />\n<br />\n\n<footer></footer>\n","import { Component, OnInit,HostListener } from '@angular/core';\nimport { ApiService } from \"../../loginservice/auth.service\";\nimport { Subject } from 'rxjs/Subject';\n \n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  navbarCollapsed = true;\n  loginbtn: boolean;\n  logoutbtn: boolean;\n  displayname:any;\n\n  userActivity;\n  userInactive: Subject<any> = new Subject();\n\n  constructor(private dataService: ApiService) {\n    dataService.getLoggedInName.subscribe((name) => this.changeName(name));\n\n    if (this.dataService.isLoggedIn()) {\n      console.log(\"loggedin\");\n       \n      this.loginbtn = false;\n      this.logoutbtn = true;\n    } else {\n      this.loginbtn = true;\n      this.logoutbtn = false;\n    }\n   }\n\n   private changeName(name: boolean): void {\n    this.logoutbtn = name;\n    this.loginbtn = !name;\n  }\n\n  logout() {\n    this.dataService.deleteToken();\n    window.location.href = window.location.href;\n  }\n\n  ngOnInit(): void {\n     // print name on admin page \n     this.displayname = this.dataService.getToken();\n     console.log(this.dataService.getToken());\n\n     this.setTimeout();\n this.userInactive.subscribe(() => {\n   this.logout();\n }); \n\n  }\n\n  setTimeout() {\n    this.userActivity = setTimeout(() => {\n      if (this.dataService.isLoggedIn) {\n        this.userInactive.next(undefined);\n        console.log('logged out');\n      }\n    },420000);\n  }\n\n  @HostListener('window:mousemove') refreshUserState() {\n    clearTimeout(this.userActivity);\n    this.setTimeout();\n  }\n\n  collapsed = true;\n     toggleCollapsed(): void {\n       this.collapsed = !this.collapsed;\n     }\n}\n","\n<nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Employee Management</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n           data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n           aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n           (click)=\"toggleCollapsed()\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n  <div  id=\"navbarSupportedContent\" [ngClass]=\"{'collapse': collapsed, 'navbar-collapse': true}\">\n    <ul class=\"navbar-nav ml-auto\">\n         \n      <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/home']\" routerLinkActive=\"active\">Home</a></li>\n      <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/add']\" routerLinkActive=\"active\">Add Employee</a></li>\n      <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/profile']\" routerLinkActive=\"active\">Manage Profile</a></li>\n      <li><button type=\"button\"  class=\"btn btn-block logoutBtn\" (click)=\"logout()\">logout</button></li>\n      <li class=\"text-light welcomeText\">Welcome <span>{{displayname}}</span></li>\n       \n    </ul>\n  </div>  \n</nav>\n\n \n     ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { ApiService } from \"../../loginservice/auth.service\";\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators\n} from \"@angular/forms\";\n@Component({\n  selector: 'app-profileuser',\n  templateUrl: './profileuser.component.html',\n  styleUrls: ['./profileuser.component.css']\n})\nexport class ProfileuserComponent implements OnInit {\n\n  profileForm: FormGroup;\n  submitted = false;\n\n  displaydata:any;\n  constructor( private router: Router, private dataService:ApiService, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.displaydata = this.dataService.getToken();\n    console.log(this.dataService.getToken());\n\n    this.profileForm = this.fb.group({\n      name: [\"\", [Validators.required, Validators.minLength(5)]],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]]\n  });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.profileForm.controls;\n  }\n\n  profileData() {\n    this.submitted = true;\n    if (this.profileForm.invalid) {\n      return;\n    }\n    console.log(this.profileForm.value);\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"dashboard\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-body\">\n            <form\n              class=\"form-horizontal\"\n              [formGroup]=\"profileForm\"\n              (ngSubmit)=\"profileData()\"\n            >\n              <div class=\"form-group\">\n                <label for=\"name\" class=\"col-sm-2 control-label\">Name : </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"name\"\n                    formControlName=\"name\"\n                    autocomplete=\"off\"\n                    class=\"form-control input-sm\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"\n                    value=\"{{ displaydata }}\"\n                  />\n\n                  <div\n                    *ngIf=\"submitted && f.name.errors\"\n                    class=\"invalid-feedback\"\n                  >\n                    <div *ngIf=\"f.name.errors.required\">\n                      Name is required\n                    </div>\n                    <div *ngIf=\"f.name.errors.minlength\">\n                      Name should contain 6 charecters\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"email\" class=\"col-sm-2 control-label\"\n                  >Email Address :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                  type=\"email\"\n                  name=\"email\"\n                  formControlName=\"email\"\n                  autocomplete=\"off\"\n                  class=\"form-control input-sm\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                  />\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">\n                      Email is required\n                    </div>\n                    <div *ngIf=\"f.email.errors.email\">\n                      Please Enter Proper Email Address\n                    </div>\n                  </div>\n                </div>\n                \n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"password\" class=\"col-sm-2 control-label\"\n                  >Password :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    formControlName=\"password\"\n                    name=\"password\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                  />\n                  <div\n                    *ngIf=\"submitted && f.password.errors\"\n                    class=\"invalid-feedback\"\n                  >\n                    <div *ngIf=\"f.password.errors.required\">\n                      Password is required\n                    </div>\n                    <div *ngIf=\"f.password.errors.minlength\">\n                      Password should contain 6 charecter\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group editbtn\">\n                <div class=\"col-sm-offset-2 col-sm-8\">\n                  <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!profileForm.valid\">Update</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<br />\n<br />\n<br />\n<footer></footer>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { EmpService } from '../../emp.service';\nimport { Employee } from '../../employee';\n\n@Component({\n  selector: 'app-show',\n  templateUrl: './show.component.html',\n  styleUrls: ['./show.component.css'],\n})\nexport class ShowComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private empService: EmpService\n  ) {}\n\n  ngOnInit(): void {\n    this.getSingleEmployee();\n  }\n\n  employee: Employee;\n  getSingleEmployee() {\n    var id = this.route.snapshot.params['id'];\n    this.empService.getEmployee(id).subscribe((employee) => {\n      this.employee = employee[0];\n    });\n  }\n\n  goBack() {\n    this.router.navigate(['/home']);\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"panelShowSection\">\n<div class=\"panel panel-default\" *ngIf=employee>\n    <div class=\"panel-body\">\n        <form class=\"form-horizontal\" >\n          <div class=\"form-group\">\n             \n            <div class=\"col-sm-9\">\n              <p class=\"form-control\">{{employee.name}}</p> \n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"position\" class=\"col-sm-2 control-label\">Job Position : </label>\n            <div class=\"col-sm-9\">\n            <p class=\"form-control\">{{employee.position}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"department\" class=\"col-sm-2 control-label\">Department Name : </label>\n            <div class=\"col-sm-9\">\n            <p class=\"form-control\">{{employee.department}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"dateofjoining\" class=\"col-sm-2 control-label\">Date of Joining : </label>\n            <div class=\"col-sm-9\">\n            <p class=\"form-control\">{{employee.dateofjoining}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"salary\" class=\"col-sm-2 control-label\">Employee's Salary : </label>\n            <div class=\"col-sm-9\">\n              <p class=\"form-control\">{{employee.salary}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"id\" class=\"col-sm-2 control-label\">Employee's ID : </label>\n            <div class=\"col-sm-9\">\n              <p class=\"form-control\">{{employee._id}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-8\">\n              <!--<button type=\"submit\" class=\"btn btn-info\" (click)=\"goBack()\">Cancel</button>-->\n               <a  class=\"btn btn-info text-light\" (click)=\"goBack()\">Cancel</a>\n            </div>\n          </div>\n      </form>\n    </div>\n  </div>\n</div>\n</div>\n</div>\n</div>\n<br>\n<br>\n<br>\n\n  <footer></footer>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          \n            <p>Copyright 2020 By Developer</p>\n          </div>\n        </div>\n      </div>\n    </div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\r\nimport { ApiService } from '../loginservice/auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class AuthguardGuard implements CanActivate {\r\n   \r\nconstructor(private dataService: ApiService,private router: Router ) {}\r\n\r\ncanActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    const routeurl: string = state.url;\r\n    return this.isLogin(routeurl);\r\n}\r\n\r\nisLogin(routeurl: string) {\r\n    if (this.dataService.isLoggedIn()) {\r\n    return true;\r\n}\r\n\r\nthis.dataService.redirectUrl = routeurl;\r\n this.router.navigate(['/login'], {queryParams: { returnUrl: routeurl }} );\r\n}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n// login service \nimport { ApiService } from '../loginservice/auth.service';\n\nimport {FormGroup, FormBuilder, Validators, NgForm} from '@angular/forms'; \n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  displayerrors:string;\n  angForm: FormGroup;\n  submitted = false;\n\n\n  constructor(private fb: FormBuilder,private dataService: ApiService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.angForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n      });\n  }\n\n     // convenience getter for easy access to form fields\n     get f() { return this.angForm.controls; }\n\n     postdata(angForm1)\n{\n  this.submitted = true;\n    if (this.angForm.invalid) {\n      return;\n  }  \n   this.dataService.userlogin(angForm1.value.email,angForm1.value.password)\n   .pipe(first())\n   .subscribe(\n   data => {\n   const redirect = this.dataService.redirectUrl ? this.dataService.redirectUrl : '/home';\n  // print user value in page\n   //this.displayname.angForm1.value.email;\n   //console.log(this.displayname.value.email);\n  this.router.navigate([redirect]);\n},\nerror => {\nthis.displayerrors=\"Username and Password is not valid\";\n console.log(this.displayerrors=\"Username and Password is not valid\");\n});\n}\n \n\n}\n","<div class=\"loginform\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <h2 class=\"text-center bg-info text-light\">Login</h2>\n\n        <div class=\"jumbotron\">\n          <form\n            [formGroup]=\"angForm\"\n            (ngSubmit)=\"postdata(angForm)\"\n            autocomplete=\"off\"\n          >\n            <div class=\"form-group\">\n              <label for=\"email\">Email Address:</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                formControlName=\"email\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                placeholder=\"Email\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n              />\n\n              <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                <div *ngIf=\"f.email.errors.email\">\n                  Email must be a valid email address\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"Password\">Password:</label>\n              <input\n                type=\"password\"\n                name=\"Password\"\n                formControlName=\"password\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                placeholder=\"Password\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n              />\n              <div\n                *ngIf=\"submitted && f.password.errors\"\n                class=\"invalid-feedback\"\n              >\n                <div *ngIf=\"f.password.errors.required\">\n                  Password is required\n                </div>\n              </div>\n            </div>\n            <div class=\"invalidMsg\">\n              {{displayerrors}}\n            </div>\n            <div class=\"btn-form\">\n              <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!angForm.valid\">Login</button>\n              <a routerLink=\"../register\">Register</a>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div class=\"col-md-5\"></div>\n    </div>\n  </div>\n</div>","import { Injectable, Output, EventEmitter } from \"@angular/core\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Users } from \"../users\";\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n  redirectUrl: string;\r\n  baseUrl: string = \"http://employeeerp.fusionbox.co.in/api\";\r\n  @Output() getLoggedInName: EventEmitter<any> = new EventEmitter();\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public userlogin(username, password) {\r\n    alert(username);\r\n    return this.httpClient\r\n      .post<any>(this.baseUrl + \"/login.php\", { username, password })\r\n      .pipe(\r\n        map((Users) => {\r\n          this.setToken(Users[0].name);\r\n          this.getLoggedInName.emit(true);\r\n          return Users;\r\n        })\r\n      );\r\n  }\r\n\r\n  public userregistration(name, email, pwd) {\r\n    return this.httpClient\r\n      .post<any>(this.baseUrl + \"/register.php\", { name, email, pwd })\r\n      .pipe(\r\n        map((Users) => {\r\n          return Users;\r\n        })\r\n      );\r\n  }\r\n\r\n  //token\r\n  setToken(token: string) {\r\n    localStorage.setItem(\"token\", token);\r\n  }\r\n  getToken() {\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n  deleteToken() {\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n\r\n  isLoggedIn() {\r\n    const usertoken = this.getToken();\r\n    if (usertoken != null) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n  NgForm\n} from \"@angular/forms\";\nimport { first } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { ApiService } from \"../loginservice/auth.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  angForm: FormGroup;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private dataService: ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.angForm = this.fb.group({\n      name: [\"\", Validators.required],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]]\n  });\n}\n\n   // convenience getter for easy access to form fields\n   get f() {\n    return this.angForm.controls;\n  }\n\n  postdata(angForm1) {\n    this.submitted = true;\n    if (this.angForm.invalid) {\n      return;\n    }\n\n    this.dataService\n      .userregistration(\n        angForm1.value.name,\n        angForm1.value.email,\n        angForm1.value.password\n      )\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          console.log(this.dataService.userregistration);\n          this.router.navigate([\"login\"]);\n        },\n\n        (error) => {}\n      );\n\n    console.log(\"Register message on click\");\n  }\n  \n\n}\n","<div class=\"loginform\">\n<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <h2 class=\"text-center bg-info text-light\">Register Here</h2>\n  \n        <div class=\"jumbotron\">\n          <form [formGroup]=\"angForm\" (ngSubmit)=\"postdata(angForm)\">\n            <div class=\"form-group\">\n              <label for=\"name\">Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                formControlName=\"name\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"\n                placeholder=\"Name\"\n              />\n              <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.name.errors.required\">Name is required</div>\n              </div>\n            </div>\n  \n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                formControlName=\"email\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                placeholder=\"Email\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n              />\n  \n              <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">\n                  Please Enter Proper Email Address\n                </div>\n                <div *ngIf=\"f.email.errors.email\">\n                  Please Enter Proper Email Address\n                </div>\n              </div>\n            </div>\n  \n            <div class=\"form-group\">\n              <label for=\"Password\">Password</label>\n              <input\n                type=\"password\"\n                name=\"Password\"\n                formControlName=\"password\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                placeholder=\"Password\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n              />\n  \n              <div\n                *ngIf=\"submitted && f.password.errors\"\n                class=\"invalid-feedback\"\n              >\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                <div *ngIf=\"f.password.errors.minlength\">\n                  Password must be at least 6 characters\n                </div>\n              </div>\n            </div>\n            <div class=\"btn-form\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!angForm.valid\">Register</button>\n            <a routerLink=\"../login\">Login </a>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","// filter-parent.pipe.ts\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\n@Pipe({\r\n  name: 'filterParent'\r\n})\r\nexport class FilterParentPipe implements PipeTransform {\r\n \r\n    \r\n    transform(value: string, keyName: string, name: any[]): string {\r\n       \r\n        if (!name) return value;\r\n        return _.filter(value, function (o) {\r\n               // return o[keyName] == name;\r\n                return o[keyName] == name \r\n                //o[field].toLowerCase().includes(value.toLowerCase());\r\n              //  item => item.name.toLowerCase().indexOf(value.toLowerCase()) > -1   \r\n        });\r\n         \r\n         \r\n    }\r\n    \r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n    \r\n    transform(items: any[], field:string, value: string): any[] {\r\n\r\n        if(!items) return [];\r\n        if(!value) return items;\r\n     \r\n        return items.filter( str => {\r\n              return str[field].toLowerCase().includes(value.toLowerCase())\r\n            });\r\n        }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {\r\n  DomSanitizer,\r\n  SafeHtml,\r\n  SafeStyle,\r\n  SafeScript,\r\n  SafeUrl,\r\n  SafeResourceUrl,\r\n} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'highlight',\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  transform(\r\n    list: any,\r\n    searchText: string\r\n  ): any[] | SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    if (!list) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return list;\r\n    }\r\n\r\n    const value = list.replace(\r\n      searchText,\r\n      `<span style='background-color:yellow'>${searchText}</span>`\r\n    );\r\n    console.log('value', value);\r\n    /*     return list.filter( str => {\r\n        return this.sanitizer.bypassSecurityTrustHtml(value) || str[searchText].toLowerCase().includes(value.toLowerCase())\r\n            });\r\n */\r\n    return this.sanitizer.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}