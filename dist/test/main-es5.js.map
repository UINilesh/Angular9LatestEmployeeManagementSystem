{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/emp.service.ts","webpack:///src/app/employee.ts","webpack:///src/app/ems/add/add.component.ts","webpack:///src/app/ems/add/add.component.html","webpack:///src/app/ems/edit/edit.component.ts","webpack:///src/app/ems/edit/edit.component.html","webpack:///src/app/ems/home/home.component.ts","webpack:///src/app/ems/home/home.component.html","webpack:///src/app/ems/navbar/navbar.component.ts","webpack:///src/app/ems/navbar/navbar.component.html","webpack:///src/app/ems/profileuser/profileuser.component.ts","webpack:///src/app/ems/profileuser/profileuser.component.html","webpack:///src/app/ems/show/show.component.ts","webpack:///src/app/ems/show/show.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/guard/authguard.guard.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/loginservice/auth.service.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/searchdata/filter-parent.pipe.ts","webpack:///src/app/searchdata/filter.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","data","title","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","router","activatedRoute","titleService","events","pipe","event","subscribe","rt","getChild","console","log","setTitle","firstChild","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EmpService","_http","employees","get","map","res","checkMe","_body","info","post","getEmployees","filename","csvData","ConvertToCSV","blob","Blob","type","dwldLink","document","createElement","url","URL","createObjectURL","isSafariBrowser","navigator","userAgent","indexOf","setAttribute","style","visibility","body","appendChild","click","removeChild","objArray","headerList","array","JSON","parse","str","row","index","slice","i","length","line","head","Employee","AddComponent","empService","fb","submitted","model","addformData","group","name","required","minLength","invalid","addEmployee","goBack","navigate","controls","EditComponent","route","snapshot","params","getSingleEmployee","getEmployee","employee","updateEmployee","HomeComponent","_empService","dataService","selectEmployeName","p","isAscendic","confirm","deleteEmployee","ascendic","descendic","sort","n1","n2","downloadFile","download","NavbarComponent","navbarCollapsed","collapsed","getLoggedInName","changeName","isLoggedIn","loginbtn","logoutbtn","deleteToken","window","location","href","displayname","getToken","toggleCollapsed","logout","ProfileuserComponent","displaydata","profileForm","email","password","value","profileData","ShowComponent","FooterComponent","AuthguardGuard","state","routeurl","isLogin","redirectUrl","queryParams","returnUrl","LoginComponent","angForm","angForm1","userlogin","redirect","error","displayerrors","postdata","ApiService","httpClient","baseUrl","username","alert","Users","setToken","emit","pwd","token","localStorage","setItem","getItem","removeItem","usertoken","RegisterComponent","userregistration","FilterParentPipe","keyName","o","FilterPipe","items","field","filter","toLowerCase","includes","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// shared component data here\nimport { HomeComponent } from './ems/home/home.component';\nimport { AddComponent } from './ems/add/add.component';\nimport { EditComponent } from './ems/edit/edit.component';\nimport { ShowComponent } from './ems/show/show.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n// authguard\nimport { AuthguardGuard } from './guard/authguard.guard';\nimport { ProfileuserComponent } from './ems/profileuser/profileuser.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full',\n    data: { title: 'Welcome to Employee Management System' },\n  },\n  { path: 'login', component: LoginComponent, data: { title: 'Login' } },\n  {\n    path: 'home',\n    component: HomeComponent,\n    canActivate: [AuthguardGuard],\n    data: { title: 'Welcome to Employee Management System' },\n  },\n  {\n    path: 'add',\n    component: AddComponent,\n    canActivate: [AuthguardGuard],\n    data: { title: 'Add Employee' },\n  },\n  {\n    path: 'edit/:id',\n    component: EditComponent,\n    canActivate: [AuthguardGuard],\n    data: { title: 'Update Employee' },\n  },\n  {\n    path: 'show/:id',\n    component: ShowComponent,\n    canActivate: [AuthguardGuard],\n    data: { title: 'Details Employee' },\n  },\n  { \n    path: 'profile',\n    component:ProfileuserComponent,\n    canActivate: [AuthguardGuard],\n    data: {title: 'Manage user profile'},\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    data: { title: 'Register' },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'test';\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title\n  ) {}\n\n  ngOnInit() {\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        var rt = this.getChild(this.activatedRoute);\n\n        rt.data.subscribe((data) => {\n          console.log(data);\n          this.titleService.setTitle(data.title);\n        });\n      });\n  }\n\n  getChild(activatedRoute: ActivatedRoute) {\n    if (activatedRoute.firstChild) {\n      return this.getChild(activatedRoute.firstChild);\n    } else {\n      return activatedRoute;\n    }\n  }\n}\n","\n     <router-outlet></router-outlet>\n  \n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NavbarComponent } from './ems/navbar/navbar.component';\nimport { AddComponent } from './ems/add/add.component';\nimport { EditComponent } from './ems/edit/edit.component';\nimport { HomeComponent } from './ems/home/home.component';\nimport { ShowComponent } from './ems/show/show.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { ApiService } from './loginservice/auth.service';\nimport { EmpService } from './emp.service';\n// authguard \nimport { AuthguardGuard } from './guard/authguard.guard';\n\n// search data filter \nimport { FilterPipe } from './searchdata/filter.pipe';\n\nimport { FilterParentPipe } from './searchdata/filter-parent.pipe';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { ProfileuserComponent } from './ems/profileuser/profileuser.component'; // <-- import the module\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    NavbarComponent,\n    AddComponent,\n    EditComponent,\n    HomeComponent,\n    ShowComponent,\n    LoginComponent,\n    RegisterComponent,\n    FilterPipe,\n    FilterParentPipe,\n    ProfileuserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxPaginationModule\n  ],\n  providers: [ApiService,EmpService,AuthguardGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n@Injectable()\nexport class EmpService {\n  employees = [];\n  constructor(private _http: HttpClient) {}\n  checkMe: any;\n\n  getEmployees() {\n    //return this._http.get(\"http://employeeerp.fusionbox.co.in/api/select.php/\")\n    return this._http\n      .get('http://employeeerp.fusionbox.co.in/api/select.php/')\n\n      .map((res) => {\n        this.checkMe = res;\n\n        if (this.checkMe._body !== '0') {\n          //  return res.json()\n          return res;\n        }\n      });\n  }\n\n  addEmployee(info) {\n    return this._http\n      .post('http://employeeerp.fusionbox.co.in/api/insert.php/', info)\n      .map(() => '');\n  }\n\n  getEmployee(id) {\n    return this._http\n      .post('http://employeeerp.fusionbox.co.in/api/selectone.php/', { id: id })\n      .map((res) => res);\n  }\n\n  deleteEmployee(id) {\n    return this._http\n      .post('http://employeeerp.fusionbox.co.in/api/delete.php/', { id: id })\n      .map(() => this.getEmployees());\n  }\n\n  updateEmployee(info) {\n    return this._http\n      .post('http://employeeerp.fusionbox.co.in/api/update.php/', info)\n      .map(() => '');\n  }\n\n  // download employee data \n  downloadFile(data, filename='data') {\n    let csvData = this.ConvertToCSV(data, ['name','position', 'dateofjoining', 'department', 'salary']);\n    console.log(csvData)\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\n    let dwldLink = document.createElement(\"a\");\n    let url = URL.createObjectURL(blob);\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\n        dwldLink.setAttribute(\"target\", \"_blank\");\n    }\n    dwldLink.setAttribute(\"href\", url);\n    dwldLink.setAttribute(\"download\", filename + \".csv\");\n    dwldLink.style.visibility = \"hidden\";\n    document.body.appendChild(dwldLink);\n    dwldLink.click();\n    document.body.removeChild(dwldLink);\n}\n\nConvertToCSV(objArray, headerList) {\n     let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n     let str = '';\n     let row = 'S.No,';\n\n     for (let index in headerList) {\n         row += headerList[index] + ',';\n     }\n     row = row.slice(0, -1);\n     str += row + '\\r\\n';\n     for (let i = 0; i < array.length; i++) {\n         let line = (i+1)+'';\n         for (let index in headerList) {\n            let head = headerList[index];\n\n             line += ',' + array[i][head];\n         }\n         str += line + '\\r\\n';\n     }\n     return str;\n }\n\n}\n","export class Employee {\n    _id:number;\n    name: string;\n    position: string;\n    dateofjoining:string;\n    department: string;\n    salary: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EmpService } from '../../emp.service';\nimport { Employee } from '../../employee';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css'],\n})\nexport class AddComponent implements OnInit {\n  addformData: FormGroup;\n  submitted = false;\n\n  constructor(\n    private empService: EmpService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.addformData = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(5)]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.addformData.controls;\n  }\n\n  model = new Employee();\n  addEmployee() {\n     if (this.addformData.invalid) {\n      return;\n    }\n    this.empService.addEmployee(this.model).subscribe(() => this.goBack());\n  }\n  goBack() {\n    this.router.navigate(['/home']);\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"dashboard\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-body\">\n            <form class=\"form-horizontal\"  autocomplete=\"false\" (submit)=\"addEmployee()\">\n              <div class=\"formGroup\">\n                <label for=\"name\" class=\"col-sm-2 control-label\"\n                  >Employee Name :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"name\"\n                    [(ngModel)]=\"model.name\"\n                     \n                  />\n                   \n                </div>\n\n              </div>\n              <div class=\"form-group\">\n                <label for=\"position\" class=\"col-sm-2 control-label\"\n                  >Job Position :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"model.position\"\n                    name=\"position\"\n                  />\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"department\" class=\"col-sm-2 control-label\"\n                  >Department Name :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"model.department\"\n                    name=\"department\"\n                  />\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"department\" class=\"col-sm-2 control-label\"\n                  >Date of Joining :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"date\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"model.dateofjoining\"\n                    name=\"dateofjoining\"\n                    required\n                  />\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"salary\" class=\"col-sm-2 control-label\"\n                  >Employee's Salary :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"model.salary\"\n                    name=\"salary\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div class=\"form-group editbtn\">\n                <div class=\"col-sm-offset-2 col-sm-8\">\n                  <button type=\"submit\" class=\"btn btn-success\">Save</button>\n                  <a class=\"btn btn-info text-light\" (click)=\"goBack()\"\n                    >Cancel</a\n                  >\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<br />\n<br />\n<br />\n\n<footer></footer>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport { EmpService } from '../../emp.service';\nimport { Employee } from '../../employee';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(private router: Router, private route: ActivatedRoute, private empService: EmpService) { }\n\n  ngOnInit(): void {\n    this.getSingleEmployee();\n  }\n\n   //model:any={};\n   model = new Employee();\n   id = this.route.snapshot.params['id'];\n   getSingleEmployee(){\n     \n     this.empService\n       .getEmployee(this.id)\n       .subscribe(employee =>{\n           this.model = employee[0];\n           })\n   };\n   \n   updateEmployee(){\n       this.empService\n         .updateEmployee(this.model)\n         .subscribe(()=> this.goBack());\n   }\n  \n    goBack(){\n     this.router.navigate(['/home']);\n   }\n   \n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n \n  <div class=\"panelShowSection\">\n<div class=\"panel panel-default\">\n   <div class=\"panel-body\">\n    <form class=\"form-horizontal\" (submit)=\"updateEmployee()\">\n  <div class=\"form-group\">\n     \n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"model.name\" name=\"name\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"position\" class=\"col-sm-2 control-label\">Job Position : </label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"model.position\" name=\"position\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"department\" class=\"col-sm-2 control-label\">Department Name : </label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"model.department\" name=\"department\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"dateofjoining\" class=\"col-sm-2 control-label\">Date of Joining : </label>\n    <div class=\"col-sm-9\">\n      <input type=\"date\" class=\"form-control\"  [(ngModel)]=\"model.dateofjoining\" name=\"dateofjoining\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"salary\" class=\"col-sm-2 control-label\">Employee's Salary : </label>\n    <div class=\"col-sm-9\">\n      <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"model.salary\" name=\"salary\">\n    </div>\n  </div>\n  \n\n  <div class=\"form-group editbtn\">\n    <div class=\"col-sm-12\">\n      \n      <button type=\"submit\" class=\"btn btn-success\">Update</button>\n      <a  class=\"btn btn-info text-light\" (click)=\"goBack()\">Cancel</a>\n    </div>\n   \n  </div>\n</form>\n\n  </div>\n</div>\n</div>\n</div>\n\n</div>\n</div>\n\n<footer></footer>\n  ","import { Component, OnInit } from '@angular/core';\nimport { EmpService } from '../../emp.service';\nimport { Employee } from '../../employee';\nimport { ApiService } from '../../loginservice/auth.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  // define select variable\n \n  selectEmployeName = null;\n  searchString: any;\n  employees: any;\n\n  // pagination code here\n  p: number = 1;\n  collection: any[];\n\n  constructor(\n    private _empService: EmpService,\n    private router: Router,\n    private dataService: ApiService\n  ) {}\n\n  ngOnInit(): void {\n    this.getEmployees();\n    this.selectEmployeName;\n  }\n\n  getEmployees() {\n    this._empService.getEmployees().subscribe((employees) => {\n      this.employees = employees;\n    });\n  }\n\n  deleteEmployee(id) {\n    if (confirm('Are you sure to delete ' + id)) {\n      console.log('Implement delete functionality here');\n      this._empService.deleteEmployee(id).subscribe(() => {\n        this.getEmployees();\n      });\n    }\n  }\n\n  // name filter code here \n  /* fruits: string[] = [\"Apple\", \"Banana\", \"Orange\", \"Peach\", \"Pear\", ];\n */\n \n  \n  isAscendic = true\n  employeessort:string[any];\n \n  send() {\n    this.isAscendic?this.ascendic():this.descendic()\n   }\n\n ascendic(){\n   this.isAscendic = false;\n    this.employees = this.employees.sort((n1,n2) => {\n   if (n1 < n2) {\n       return 1;\n   }\n   if (n1 > n2) {\n       return -1;\n   }\n   return 0;\n});\n}\n\n descendic(){\n   this.isAscendic = true\n   this.employees = this.employees.sort((n1,n2) => {\n   if (n1 > n2) {\n       return 1;\n   }\n   if (n1 < n2) {\n       return -1;\n   }\n   return 0;\n});\n }  \n\n download(){\n  this._empService.downloadFile(this.employees, 'jsontocsv');\n}\n \n\n  \n}\n","<app-navbar></app-navbar>\n<div class=\"dashboard\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <select\n          name=\"filterName\"\n          class=\"form-control\"\n          [(ngModel)]=\"selectEmployeName\"\n        >\n          <option [ngValue]=\"null\">Please Select Name</option>\n          <option *ngFor=\"let employee of employees\">\n            {{ employee.name }}\n          </option>\n        </select>\n      </div>\n      <div class=\"col-md-4 ml-auto\">\n        <div class=\"searchBox\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"searchString\"\n          placeholder=\"Search Name Here...\"\n          [(ngModel)]=\"searchString\"\n        />\n        <p>You Typed - {{ searchString }}</p>\n      </div>\n      </div>\n    </div>\n  </div>\n  <br />\n  <div class=\"container\">\n    <div class=\"detailsSection\">\n      <div class=\"exportdata\">\n        <button class=\"btn btn-info text-light\" (click)=\"download()\">Export Data</button>\n      </div>\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <td class=\"bg-dark text-light\"><strong>Name</strong></td>\n          <td class=\"bg-dark text-light\"><strong>Position</strong></td>\n          <td class=\"bg-dark text-light\"><strong>Date of Joining</strong></td>\n\n          <td class=\"bg-dark text-light\"><strong>Department</strong></td>\n          <td class=\"bg-dark actionField text-light\">\n            <strong>Action</strong>\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"\n            let employee of employees\n              | filter: 'name':selectEmployeName\n              | paginate\n                : { id: 'paginationalbum', itemsPerPage: 4, currentPage: p }\n              | filter: 'name':searchString\n          \"\n        >\n          <td>{{ employee.name }}</td>\n          <td>{{ employee.position }}</td>\n          <td>{{ employee.dateofjoining }}</td>\n          <td>{{ employee.department }}</td>\n          <td width=\"275\">\n            <a class=\"btn btn-info\" routerLink=\"/show/{{ employee._id }}\"\n              >Detail</a\n            >\n            <a class=\"btn btn-success\" routerLink=\"/edit/{{ employee._id }}\"\n              >Edit</a\n            >\n            <a\n              class=\"btn btn-danger text-light\"\n              (click)=\"deleteEmployee(employee._id)\"\n              >Delete</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n \n  </div>\n    <table width=\"100%\" class=\"\" style=\"text-align: center;\">\n      <tr>\n        <td>\n          <pagination-controls id=\"paginationalbum\" (pageChange)=\"p = $event\">\n          </pagination-controls>\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n  \n \n<br>\n<br>\n<br>\n<br>\n\n<footer></footer>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from \"../../loginservice/auth.service\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  navbarCollapsed = true;\n  loginbtn: boolean;\n  logoutbtn: boolean;\n  displayname:any;\n\n  constructor(private dataService: ApiService) {\n    dataService.getLoggedInName.subscribe((name) => this.changeName(name));\n\n    if (this.dataService.isLoggedIn()) {\n      console.log(\"loggedin\");\n       \n      this.loginbtn = false;\n      this.logoutbtn = true;\n    } else {\n      this.loginbtn = true;\n      this.logoutbtn = false;\n    }\n   }\n\n   private changeName(name: boolean): void {\n    this.logoutbtn = name;\n    this.loginbtn = !name;\n  }\n\n  logout() {\n    this.dataService.deleteToken();\n    window.location.href = window.location.href;\n  }\n\n  ngOnInit(): void {\n     // print name on admin page \n     this.displayname = this.dataService.getToken();\n     console.log(this.dataService.getToken());\n  }\n\n  collapsed = true;\n     toggleCollapsed(): void {\n       this.collapsed = !this.collapsed;\n     }\n}\n","\n<nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Employee Management</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n           data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n           aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n           (click)=\"toggleCollapsed()\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n  <div  id=\"navbarSupportedContent\" [ngClass]=\"{'collapse': collapsed, 'navbar-collapse': true}\">\n    <ul class=\"navbar-nav ml-auto\">\n         \n      <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/home']\" routerLinkActive=\"active\">Home</a></li>\n      <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/add']\" routerLinkActive=\"active\">Add Employee</a></li>\n      <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/profile']\" routerLinkActive=\"active\">Manage Profile</a></li>\n      <li><button type=\"button\"  class=\"btn btn-block logoutBtn\" (click)=\"logout()\">logout</button></li>\n      <li class=\"text-light welcomeText\">Welcome <span>{{displayname}}</span></li>\n       \n    </ul>\n  </div>  \n</nav>\n\n \n     ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { ApiService } from \"../../loginservice/auth.service\";\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators\n} from \"@angular/forms\";\n@Component({\n  selector: 'app-profileuser',\n  templateUrl: './profileuser.component.html',\n  styleUrls: ['./profileuser.component.css']\n})\nexport class ProfileuserComponent implements OnInit {\n\n  profileForm: FormGroup;\n  submitted = false;\n\n  displaydata:any;\n  constructor( private router: Router, private dataService:ApiService, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.displaydata = this.dataService.getToken();\n    console.log(this.dataService.getToken());\n\n    this.profileForm = this.fb.group({\n      name: [\"\", [Validators.required, Validators.minLength(5)]],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]]\n  });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.profileForm.controls;\n  }\n\n  profileData() {\n    this.submitted = true;\n    if (this.profileForm.invalid) {\n      return;\n    }\n    console.log(this.profileForm.value);\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"dashboard\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-body\">\n            <form\n              class=\"form-horizontal\"\n              [formGroup]=\"profileForm\"\n              (ngSubmit)=\"profileData()\"\n            >\n              <div class=\"form-group\">\n                <label for=\"name\" class=\"col-sm-2 control-label\">Name : </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"name\"\n                    formControlName=\"name\"\n                    autocomplete=\"off\"\n                    class=\"form-control input-sm\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"\n                    value=\"{{ displaydata }}\"\n                  />\n\n                  <div\n                    *ngIf=\"submitted && f.name.errors\"\n                    class=\"invalid-feedback\"\n                  >\n                    <div *ngIf=\"f.name.errors.required\">\n                      Name is required\n                    </div>\n                    <div *ngIf=\"f.name.errors.minlength\">\n                      Name should contain 6 charecters\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"email\" class=\"col-sm-2 control-label\"\n                  >Email Address :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                  type=\"email\"\n                  name=\"email\"\n                  formControlName=\"email\"\n                  autocomplete=\"off\"\n                  class=\"form-control input-sm\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                  />\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">\n                      Email is required\n                    </div>\n                    <div *ngIf=\"f.email.errors.email\">\n                      Please Enter Proper Email Address\n                    </div>\n                  </div>\n                </div>\n                \n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"password\" class=\"col-sm-2 control-label\"\n                  >Password :\n                </label>\n                <div class=\"col-sm-9\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    formControlName=\"password\"\n                    name=\"password\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                  />\n                  <div\n                    *ngIf=\"submitted && f.password.errors\"\n                    class=\"invalid-feedback\"\n                  >\n                    <div *ngIf=\"f.password.errors.required\">\n                      Password is required\n                    </div>\n                    <div *ngIf=\"f.password.errors.minlength\">\n                      Password should contain 6 charecter\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group editbtn\">\n                <div class=\"col-sm-offset-2 col-sm-8\">\n                  <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!profileForm.valid\">Update</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<br />\n<br />\n<br />\n<footer></footer>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport { EmpService } from '../../emp.service';\nimport { Employee } from '../../employee';\n\n@Component({\n  selector: 'app-show',\n  templateUrl: './show.component.html',\n  styleUrls: ['./show.component.css']\n})\nexport class ShowComponent implements OnInit {\n\n  constructor( private router: Router, private route: ActivatedRoute, private empService: EmpService) { }\n\n  ngOnInit(): void {\n    this.getSingleEmployee();\n  }\n\n  employee:Employee;\n  getSingleEmployee(){\n    var id = this.route.snapshot.params['id'];\n    this.empService\n      .getEmployee(id)\n      .subscribe(employee => {\n          this.employee = employee[0];\n          })\n  };\n\n  goBack(){\n    this.router.navigate(['/home']);\n  }\n  \n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"panelShowSection\">\n<div class=\"panel panel-default\" *ngIf=employee>\n    <div class=\"panel-body\">\n        <form class=\"form-horizontal\" >\n          <div class=\"form-group\">\n             \n            <div class=\"col-sm-9\">\n              <p class=\"form-control\">{{employee.name}}</p> \n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"position\" class=\"col-sm-2 control-label\">Job Position : </label>\n            <div class=\"col-sm-9\">\n            <p class=\"form-control\">{{employee.position}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"department\" class=\"col-sm-2 control-label\">Department Name : </label>\n            <div class=\"col-sm-9\">\n            <p class=\"form-control\">{{employee.department}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"dateofjoining\" class=\"col-sm-2 control-label\">Date of Joining : </label>\n            <div class=\"col-sm-9\">\n            <p class=\"form-control\">{{employee.dateofjoining}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"salary\" class=\"col-sm-2 control-label\">Employee's Salary : </label>\n            <div class=\"col-sm-9\">\n              <p class=\"form-control\">{{employee.salary}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"id\" class=\"col-sm-2 control-label\">Employee's ID : </label>\n            <div class=\"col-sm-9\">\n              <p class=\"form-control\">{{employee._id}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"col-sm-offset-2 col-sm-8\">\n              <!--<button type=\"submit\" class=\"btn btn-info\" (click)=\"goBack()\">Cancel</button>-->\n               <a  class=\"btn btn-info text-light\" (click)=\"goBack()\">Cancel</a>\n            </div>\n          </div>\n      </form>\n    </div>\n  </div>\n</div>\n</div>\n</div>\n</div>\n<br>\n<br>\n<br>\n\n  <footer></footer>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          \n            <p>Copyright 2020 By Developer</p>\n          </div>\n        </div>\n      </div>\n    </div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\r\nimport { ApiService } from '../loginservice/auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class AuthguardGuard implements CanActivate {\r\n   \r\nconstructor(private dataService: ApiService,private router: Router ) {}\r\n\r\ncanActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    const routeurl: string = state.url;\r\n    return this.isLogin(routeurl);\r\n}\r\n\r\nisLogin(routeurl: string) {\r\n    if (this.dataService.isLoggedIn()) {\r\n    return true;\r\n}\r\n\r\nthis.dataService.redirectUrl = routeurl;\r\n this.router.navigate(['/login'], {queryParams: { returnUrl: routeurl }} );\r\n}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n// login service \nimport { ApiService } from '../loginservice/auth.service';\n\nimport {FormGroup, FormBuilder, Validators, NgForm} from '@angular/forms'; \n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  displayerrors:string;\n  angForm: FormGroup;\n  submitted = false;\n\n\n  constructor(private fb: FormBuilder,private dataService: ApiService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.angForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n      });\n  }\n\n     // convenience getter for easy access to form fields\n     get f() { return this.angForm.controls; }\n\n     postdata(angForm1)\n{\n  this.submitted = true;\n    if (this.angForm.invalid) {\n      return;\n  }  \n   this.dataService.userlogin(angForm1.value.email,angForm1.value.password)\n   .pipe(first())\n   .subscribe(\n   data => {\n   const redirect = this.dataService.redirectUrl ? this.dataService.redirectUrl : '/home';\n  // print user value in page\n   //this.displayname.angForm1.value.email;\n   //console.log(this.displayname.value.email);\n  this.router.navigate([redirect]);\n},\nerror => {\nthis.displayerrors=\"Username and Password is not valid\";\n console.log(this.displayerrors=\"Username and Password is not valid\");\n});\n}\n \n\n}\n","<div class=\"loginform\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <h2 class=\"text-center bg-info text-light\">Login</h2>\n\n        <div class=\"jumbotron\">\n          <form\n            [formGroup]=\"angForm\"\n            (ngSubmit)=\"postdata(angForm)\"\n            autocomplete=\"off\"\n          >\n            <div class=\"form-group\">\n              <label for=\"email\">Email Address:</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                formControlName=\"email\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                placeholder=\"Email\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n              />\n\n              <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                <div *ngIf=\"f.email.errors.email\">\n                  Email must be a valid email address\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"Password\">Password:</label>\n              <input\n                type=\"password\"\n                name=\"Password\"\n                formControlName=\"password\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                placeholder=\"Password\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n              />\n              <div\n                *ngIf=\"submitted && f.password.errors\"\n                class=\"invalid-feedback\"\n              >\n                <div *ngIf=\"f.password.errors.required\">\n                  Password is required\n                </div>\n              </div>\n            </div>\n            <div class=\"invalidMsg\">\n              {{displayerrors}}\n            </div>\n            <div class=\"btn-form\">\n              <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!angForm.valid\">Login</button>\n              <a routerLink=\"../register\">Register</a>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div class=\"col-md-5\"></div>\n    </div>\n  </div>\n</div>","import { Injectable, Output, EventEmitter } from \"@angular/core\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Users } from \"../users\";\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n  redirectUrl: string;\r\n  baseUrl: string = \"http://employeeerp.fusionbox.co.in/api\";\r\n  @Output() getLoggedInName: EventEmitter<any> = new EventEmitter();\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public userlogin(username, password) {\r\n    alert(username);\r\n    return this.httpClient\r\n      .post<any>(this.baseUrl + \"/login.php\", { username, password })\r\n      .pipe(\r\n        map((Users) => {\r\n          this.setToken(Users[0].name);\r\n          this.getLoggedInName.emit(true);\r\n          return Users;\r\n        })\r\n      );\r\n  }\r\n\r\n  public userregistration(name, email, pwd) {\r\n    return this.httpClient\r\n      .post<any>(this.baseUrl + \"/register.php\", { name, email, pwd })\r\n      .pipe(\r\n        map((Users) => {\r\n          return Users;\r\n        })\r\n      );\r\n  }\r\n\r\n  //token\r\n  setToken(token: string) {\r\n    localStorage.setItem(\"token\", token);\r\n  }\r\n  getToken() {\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n  deleteToken() {\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n\r\n  isLoggedIn() {\r\n    const usertoken = this.getToken();\r\n    if (usertoken != null) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n  NgForm\n} from \"@angular/forms\";\nimport { first } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { ApiService } from \"../loginservice/auth.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  angForm: FormGroup;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private dataService: ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.angForm = this.fb.group({\n      name: [\"\", Validators.required],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]]\n  });\n}\n\n   // convenience getter for easy access to form fields\n   get f() {\n    return this.angForm.controls;\n  }\n\n  postdata(angForm1) {\n    this.submitted = true;\n    if (this.angForm.invalid) {\n      return;\n    }\n\n    this.dataService\n      .userregistration(\n        angForm1.value.name,\n        angForm1.value.email,\n        angForm1.value.password\n      )\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          console.log(this.dataService.userregistration);\n          this.router.navigate([\"login\"]);\n        },\n\n        (error) => {}\n      );\n\n    console.log(\"Register message on click\");\n  }\n  \n\n}\n","<div class=\"loginform\">\n<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <h2 class=\"text-center bg-info text-light\">Register Here</h2>\n  \n        <div class=\"jumbotron\">\n          <form [formGroup]=\"angForm\" (ngSubmit)=\"postdata(angForm)\">\n            <div class=\"form-group\">\n              <label for=\"name\">Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                formControlName=\"name\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"\n                placeholder=\"Name\"\n              />\n              <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.name.errors.required\">Name is required</div>\n              </div>\n            </div>\n  \n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                formControlName=\"email\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                placeholder=\"Email\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n              />\n  \n              <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">\n                  Please Enter Proper Email Address\n                </div>\n                <div *ngIf=\"f.email.errors.email\">\n                  Please Enter Proper Email Address\n                </div>\n              </div>\n            </div>\n  \n            <div class=\"form-group\">\n              <label for=\"Password\">Password</label>\n              <input\n                type=\"password\"\n                name=\"Password\"\n                formControlName=\"password\"\n                autocomplete=\"off\"\n                class=\"form-control input-sm\"\n                placeholder=\"Password\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n              />\n  \n              <div\n                *ngIf=\"submitted && f.password.errors\"\n                class=\"invalid-feedback\"\n              >\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                <div *ngIf=\"f.password.errors.minlength\">\n                  Password must be at least 6 characters\n                </div>\n              </div>\n            </div>\n            <div class=\"btn-form\">\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!angForm.valid\">Register</button>\n            <a routerLink=\"../login\">Login </a>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","// filter-parent.pipe.ts\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\n@Pipe({\r\n  name: 'filterParent'\r\n})\r\nexport class FilterParentPipe implements PipeTransform {\r\n \r\n    \r\n    transform(value: string, keyName: string, name: any[]): string {\r\n       \r\n        if (!name) return value;\r\n        return _.filter(value, function (o) {\r\n               // return o[keyName] == name;\r\n                return o[keyName] == name \r\n                //o[field].toLowerCase().includes(value.toLowerCase());\r\n              //  item => item.name.toLowerCase().indexOf(value.toLowerCase()) > -1   \r\n        });\r\n         \r\n         \r\n    }\r\n    \r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n    \r\n    transform(items: any[], field:string, value: string): any[] {\r\n\r\n        if(!items) return [];\r\n        if(!value) return items;\r\n    \r\n    \r\n        return items.filter( str => {\r\n              return str[field].toLowerCase().includes(value.toLowerCase());\r\n            });\r\n       }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}